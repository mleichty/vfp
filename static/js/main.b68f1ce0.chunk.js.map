{"version":3,"sources":["components/MenuItemUp.js","components/MenuItemDown.js","components/Nav.js","components/Home.js","components/Header.js","components/Fire.js","components/BlackBox.js","components/Quote.js","components/Footer.js","components/About.js","components/ScrollSection.js","components/Database.js","components/Gallery.js","components/Resources.js","components/Forest.js","App.js","serviceWorker.js","index.js"],"names":["MenuItemUp","props","triStyles","menu","React","useState","hoverDisplay","changeDisplay","toggleHover","display","triStyle","marginLeft","link","className","activeClassName","to","onMouseOver","onMouseOut","style","MenuItemDown","hoverBorder","changeBorder","styling","borderTop","navLink","Nav","desktopMenu","mobileMenu","toggle","changeToggle","mobileToggle","changeMobileToggle","home","onClick","icon","faTimes","src","alt","faBars","size","Home","frameBorder","allow","allowFullScreen","Header","header","h1","title","fire","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","BlackBox","resources","updateResources","submitted","db","firestore","useEffect","newResources","unsubscribe","collection","orderBy","get","then","snapshot","forEach","doc","item","name","data","id","push","image","body2","body3","links","forest","state","location","flora","fauna","habitats","threats","source","resourceList","map","resource","idx","href","target","body","Quote","author","quote","Footer","year","forests","updateForests","Date","getFullYear","newForests","limit","mainPic","forestList","key","setTimeout","window","reload","$","scrollTop","backgroundImage","About","scroll","console","log","css","textShadow","animationName","animationDuration","opacity","quote2","ScrollSection","gallery","updateGallery","facts","updateFacts","forestMedia","updateForestMedia","forestId","updateForestId","leftHeight","updateLeftHeight","newGallery","unsubscribe2","media","galleryList","newForestMedia","unsubscribe4","where","forestMediaList","newFacts","unsubscribe3","fact","bottom","database","leftMove","rightMove","toggleScroll","factList","left","useRef","boxLeft","boxRight","scrollStop","current","stop","height","ref","scrollLeft","animate","faAngleDoubleLeft","scrollRight","faAngleDoubleRight","overflowX","marginBottom","width","shiftLeft","shiftRight","Database","Gallery","Resources","Forest","match","params","description","videoUrl","values","setValues","bg1","App","WebkitBackdropFilter","backdropFilter","path","exact","component","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b68f1ce0.chunk.js","sourcesContent":["import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nfunction MenuItemUp(props) {\r\n\r\n    const [hoverDisplay, changeDisplay] = React.useState('block');\r\n    // const [triStyles, changeTriStyles] = React.useState({marginLeft: \"-60px\"});\r\n\r\n    let toggleHover = () => {\r\n        if (hoverDisplay === 'block') {\r\n            changeDisplay('none');\r\n        } else if (hoverDisplay === 'none') {\r\n            changeDisplay('block');\r\n        }\r\n    };\r\n\r\n    let display = {\r\n        display: hoverDisplay\r\n    };\r\n\r\n    let triStyles;\r\n\r\n    if (props.triStyle === \"triLeft\") {\r\n        triStyles = {marginLeft: \"-60px\"};\r\n    }\r\n\r\n    let menu;\r\n    if (props.link) {\r\n        menu = <NavLink className=\"nav__link nav__link--up\"\r\n                        activeClassName=\"active\"\r\n                        to={\"/\" + props.link} onMouseOver={toggleHover}\r\n                        onMouseOut={toggleHover}>{props.link}</NavLink>\r\n    } else {\r\n        menu =\r\n            <p className=\"nav__link nav__link--up nav__link--small\" onMouseOver={toggleHover}\r\n                 onMouseOut={toggleHover}>\r\n                Menu\r\n            </p>\r\n    }\r\n\r\n    return (\r\n        <div className=\"nav__tri nav__tri--up\" style={triStyles}>\r\n            {menu}\r\n            <div className=\"nav__tri--after\" style={display}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MenuItemUp;","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nfunction MenuItemDown(props) {\r\n\r\n    const [hoverBorder, changeBorder] = React.useState('var(--black)');\r\n\r\n    let toggleHover = () => {\r\n        if (hoverBorder === 'var(--black)') {\r\n            changeBorder('var(--blue)');\r\n        } else if (hoverBorder === 'var(--blue)') {\r\n            changeBorder('var(--black)');\r\n        }\r\n    };\r\n\r\n    let styling = {\r\n        borderTop: \"90px solid \" + hoverBorder\r\n    };\r\n\r\n    let navLink = \"/\" + props.link;\r\n\r\n    return(\r\n        <div className=\"nav__tri nav__tri--down\" style={styling}>\r\n            <NavLink className=\"nav__link nav__link--down\"\r\n                     activeClassName=\"active\"\r\n                     to={navLink} onMouseOver={toggleHover}\r\n                     onMouseOut={toggleHover}>{props.link}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MenuItemDown;","import React from 'react';\r\nimport MenuItemUp from \"./MenuItemUp\";\r\nimport MenuItemDown from \"./MenuItemDown\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faTimes, faBars} from '@fortawesome/free-solid-svg-icons';\r\nimport {NavLink, Link} from 'react-router-dom';\r\n\r\nfunction Nav(props) {\r\n    const [toggle, changeToggle] = React.useState(true);\r\n    const [mobileToggle, changeMobileToggle] = React.useState(true);\r\n    // const nav = React.useRef(null);\r\n\r\n    let display;\r\n    if (props.home === \"homePage\") {\r\n        display = {\r\n            display: \"block\"\r\n        }\r\n    } else {\r\n        display = {\r\n            display: \"none\"\r\n        }\r\n    }\r\n\r\n    const closeMenu = () => {\r\n        changeToggle(false);\r\n    };\r\n\r\n    const openMenu = () => {\r\n        changeToggle(true);\r\n    };\r\n\r\n    let desktopMenu;\r\n    if (toggle) {\r\n        desktopMenu = <div className=\"nav nav--full\">\r\n            <div className=\"nav__container\">\r\n                <MenuItemUp link={\"home\"}/>\r\n                <MenuItemDown link={\"about\"}/>\r\n                <MenuItemUp triStyle={\"triLeft\"} link={\"gallery\"}/>\r\n                <MenuItemDown link={\"database\"}/>\r\n                <MenuItemUp triStyle={\"triLeft\"} link={\"resources\"}/>\r\n                <div className=\"nav__icon\" onClick={() => closeMenu()}>\r\n                    <FontAwesomeIcon icon={faTimes}/></div>\r\n            </div>\r\n            <h1 className=\"nav__title\" style={display}>The Virgin Forest\r\n                Project</h1>\r\n        </div>\r\n    } else {\r\n        desktopMenu = <div className=\"nav nav--small\">\r\n                <span onClick={() => openMenu()}><MenuItemUp\r\n                    menu=\"menu\"/></span>\r\n        </div>\r\n    }\r\n\r\n    const toggleMobile = () => {\r\n        changeMobileToggle(!mobileToggle);\r\n    };\r\n\r\n    let mobileMenu;\r\n    if(mobileToggle) {\r\n        mobileMenu = {display: \"none\"}\r\n    } else {\r\n        mobileMenu = {display: \"flex\"}\r\n    }\r\n\r\n    return (\r\n        <nav>\r\n            {desktopMenu}\r\n            <div className=\"nav__mobile\">\r\n                <Link to={'/'} className=\"nav__logoDiv\">\r\n                    <img className=\"nav__logo\" src=\"images/vfp-logo.png\"\r\n                         alt=\"\"/>\r\n                </Link>\r\n                <div className=\"nav__hamburgerDiv\"\r\n                     onClick={() => toggleMobile()}>\r\n                    <FontAwesomeIcon icon={faBars} className=\"nav__hamburger\"\r\n                                     size='lg'/>\r\n                </div>\r\n                <div className=\"nav__mobileLinks\" style={mobileMenu}>\r\n                    <NavLink to=\"/home\"\r\n                             className=\"nav__mobileLink\">Home</NavLink>\r\n                    <NavLink to=\"/about\"\r\n                             className=\"nav__mobileLink\">About</NavLink>\r\n                    <NavLink to=\"/gallery\"\r\n                             className=\"nav__mobileLink\">Gallery</NavLink>\r\n                    <NavLink to=\"/database\"\r\n                             className=\"nav__mobileLink\">Database</NavLink>\r\n                    <NavLink to=\"/resources\"\r\n                             className=\"nav__mobileLink\">Resources</NavLink>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Nav;","import React from 'react';\r\nimport Nav from \"./Nav\";\r\n\r\nfunction Home() {\r\n\r\n    // let bg = {\r\n    //     //make sure images are in public folder to access!\r\n    //     backgroundImage: \"url('images/Forest6.jpg')\"\r\n    // };\r\n\r\n    return (\r\n        <div>\r\n            <Nav home=\"homePage\"/>\r\n            <div className=\"home nav__padding\">\r\n                <iframe\r\n                    src=\"https://player.vimeo.com/video/359859465?autoplay=1&loop=1\"\r\n                    className=\"home__video\" frameBorder=\"0\"\r\n                    allow=\"autoplay; fullscreen\" allowFullScreen/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction Header(props) {\r\n    let header;\r\n    if (props.h1) {\r\n        header = <h1 className=\"header__title\">\r\n            {props.title}\r\n        </h1>\r\n    } else {\r\n        header = <h2 className=\"header__title\">\r\n            {props.title}\r\n        </h2>\r\n    }\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <Link to={'/'}>\r\n                <img className=\"header__image\" src='images/triangles.png'\r\n                     alt=\"Logo Triangles\"/>\r\n            </Link>\r\n            {header}\r\n            <div className=\"header__line\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCOo53gsikeUbqx60Mh1DRaI_nD5_3zyD8\",\r\n    authDomain: \"virginforestproject.firebaseapp.com\",\r\n    databaseURL: \"https://virginforestproject.firebaseio.com\",\r\n    projectId: \"virginforestproject\",\r\n    storageBucket: \"virginforestproject.appspot.com\",\r\n    messagingSenderId: \"232668074364\",\r\n    appId: \"1:232668074364:web:f5828f39bfe5b5b44014f9\",\r\n    measurementId: \"G-K9YS97LJYX\"\r\n};\r\n\r\nconst fire = firebase.initializeApp(firebaseConfig);\r\n\r\nexport default fire;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport fire from \"./Fire\";\r\n\r\nfunction BlackBox(props) {\r\n\r\n    const [resources, updateResources] = React.useState([]);\r\n    const [submitted, changeSubmitted] = React.useState(\"\");\r\n\r\n    let db = fire.firestore();\r\n\r\n    React.useEffect(() => {\r\n        let newResources = [];\r\n\r\n        function handleStatusChange(status) {\r\n            updateResources(status);\r\n        }\r\n\r\n        const unsubscribe = db.collection(\"resources\").orderBy('name').get().then(\r\n            function (snapshot) {\r\n                snapshot.forEach(\r\n                    function (doc) {\r\n                        let item = {\r\n                            name: doc.data().name,\r\n                            link: doc.data().link,\r\n                            id: doc.id\r\n                        };\r\n                        newResources.push(item);\r\n                    });\r\n\r\n                handleStatusChange(newResources);\r\n            });\r\n        return () => unsubscribe;\r\n    }, [submitted]);\r\n\r\n    let resourceList = resources.map((resource, idx) => {\r\n        return (\r\n            <li><a className=\"link\" href={resource.link} target=\"_blank\">{resource.name}</a></li>\r\n        )\r\n    });\r\n\r\n    let header;\r\n    if(props.title && props.h1) {\r\n        header = <Header title={props.title} h1=\"true\"/>;\r\n    } else if (props.title) {\r\n        header = <Header title={props.title}/>;\r\n    }\r\n\r\n    let image;\r\n    if(props.src) {\r\n        image = <img src={props.src} alt=\"\" className=\"blackBox__img\"/>\r\n    }\r\n\r\n    let body2;\r\n    if(props.body2) {\r\n        body2 = <p className=\"blackBox__multi\">{props.body2}</p>\r\n    }\r\n\r\n    let body3;\r\n    if(props.body3) {\r\n        body3 = <p className=\"blackBox__multi\">{props.body3}</p>\r\n    }\r\n\r\n    // let search;\r\n    // if(props.search) {\r\n    //     search = <Search/>\r\n    // }\r\n\r\n    let links;\r\n    if(props.resources) {\r\n        links = <div className=\"blackBox__links\">\r\n            <ul>\r\n                {resourceList}\r\n            </ul>\r\n        </div>\r\n    }\r\n\r\n    // let contact;\r\n    // if(props.contact) {\r\n    //     contact = <div className=\"form__input form__input--blackBox\">\r\n    //         <input type=\"text\" placeholder=\"First Name\"/>\r\n    //         <input type=\"text\" placeholder=\"Last Name\"/>\r\n    //         <input type=\"email\" placeholder=\"Email\"/>\r\n    //         <input type=\"phone\" placeholder=\"Phone Number\"/>\r\n    //         <textarea placeholder=\"Your Message...\"/>\r\n    //     </div>\r\n    // }\r\n\r\n    let forest;\r\n    if(props.forest) {\r\n        //tried to map / foreach through props.forest since it's an object\r\n        //but said props.forest.map was not a function\r\n        let state;\r\n        let location;\r\n        let size;\r\n        let flora;\r\n        let fauna;\r\n        let habitats;\r\n        let threats;\r\n        let source;\r\n        if(props.forest.state !== \"\") {\r\n            state = <p className=\"blackBox__forestFact\"><span className=\"blackBox__link\">State: </span>{props.forest.state}</p>\r\n        }\r\n        if(props.forest.location !== \"\") {\r\n            location = <p className=\"blackBox__forestFact\"><span className=\"blackBox__link\">Location: </span>{props.forest.location}</p>\r\n        }\r\n        if(props.forest.size !== \"\") {\r\n            size = <p className=\"blackBox__forestFact\"><span className=\"blackBox__link\">Size: </span>{props.forest.size}</p>\r\n        }\r\n        if(props.forest.flora !== \"\") {\r\n            flora = <p className=\"blackBox__forestFact\"><span className=\"blackBox__link\">Flora: </span>{props.forest.flora}</p>\r\n        }\r\n        if(props.forest.fauna !== \"\") {\r\n            fauna = <p className=\"blackBox__forestFact\"><span className=\"blackBox__link\">Fauna: </span>{props.forest.fauna}</p>\r\n        }\r\n        if(props.forest.habitats !== \"\") {\r\n            habitats = <p className=\"blackBox__forestFact\"><span className=\"blackBox__link\">Habitats: </span>{props.forest.habitats}</p>\r\n        }\r\n        if(props.forest.threats !== \"\") {\r\n            threats = <p className=\"blackBox__forestFact\"><span className=\"blackBox__link\">Threats: </span>{props.forest.threats}</p>\r\n        }\r\n        if(props.forest.source !== \"\") {\r\n            source = <p className=\"blackBox__forestFact\"><span className=\"blackBox__link\">Source: </span>{props.forest.source}</p>\r\n        }\r\n        forest = <div>\r\n            {state}\r\n            {location}\r\n            {size}\r\n            {flora}\r\n            {fauna}\r\n            {habitats}\r\n            {threats}\r\n            {source}\r\n        </div>\r\n    }\r\n\r\n    return (\r\n        <div className=\"blackBox\">\r\n            {header}\r\n            {image}\r\n            <p className=\"blackBox__multi\">{props.body}</p>\r\n            {body2}\r\n            {body3}\r\n            {/*{search}*/}\r\n            {links}\r\n            {/*{contact}*/}\r\n            {forest}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BlackBox;","import React from 'react';\r\n\r\nfunction Quote(props) {\r\n    let author;\r\n    if(props.author) {\r\n        author = <h4 className=\"quote__body quote__body--auth\">props.author</h4>;\r\n    }\r\n\r\n    if(props.src) {\r\n        author = <h4 className=\"quote__body quote__body--auth\"><span className=\"quote__body--src\">{props.src}</span></h4>;\r\n    }\r\n\r\n    if(props.author && props.src) {\r\n        author = <h4 className=\"quote__body quote__body--auth\">{props.author}, <span className=\"quote__body--src\">{props.src}</span></h4>;\r\n    }\r\n\r\n\r\n    return(\r\n        <div className=\"quote\">\r\n            <h2 className=\"quote__body quote__body--quote\">\"{props.quote}\"</h2>\r\n            {author}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Quote;","import React from 'react';\r\nimport {Link, Redirect} from \"react-router-dom\";\r\nimport fire from \"./Fire\";\r\nimport $ from 'jquery';\r\n\r\nfunction Footer() {\r\n\r\n    const [forests, updateForests] = React.useState([]);\r\n    const [submitted, changeSubmitted] = React.useState(\"\");\r\n\r\n    let year;\r\n    if(new Date().getFullYear() !== 2019) {\r\n        year = \"- \" + new Date().getFullYear();\r\n    }\r\n\r\n    const reload = () => {\r\n        setTimeout(() => {window.location.reload(); $(window).scrollTop(0);}, 200);\r\n    };\r\n\r\n    let db = fire.firestore();\r\n\r\n    React.useEffect(() => {\r\n        let newForests = [];\r\n\r\n        function handleStatusChange(status) {\r\n            updateForests(status);\r\n        }\r\n\r\n        const unsubscribe = db.collection(\"forests\").limit(3).get().then(\r\n            function (snapshot) {\r\n                snapshot.forEach(\r\n                    function (doc) {\r\n                        let item = {\r\n                            mainPic: doc.data().mainPic,\r\n                            id: doc.id\r\n                        };\r\n                        newForests.push(item);\r\n                    });\r\n                handleStatusChange(newForests);\r\n            });\r\n        return () => unsubscribe;\r\n    }, [submitted]);\r\n\r\n    let forestList = forests.map((forest, idx) => {\r\n        return (\r\n            <Link to={'/' + forest.id} key={idx} className=\"footer__forest\" onClick={() => reload()}\r\n                  style={{backgroundImage: \"url('\" + forest.mainPic + \"')\"}}>\r\n            </Link>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <div className=\"footer\">\r\n            <Link to={'/'} className=\"footer__third footer__third--left\">\r\n                <img className=\"footer__logo\"\r\n                    src=\"images/vfp-logo.png\" alt=\"\"/>\r\n            </Link>\r\n            <div className=\"footer__third footer__third--mid\">\r\n                <h4>Popular Virgin Forests</h4>\r\n                <div className=\"footer__forestDiv\">\r\n                    {forestList}\r\n                </div>\r\n                {/*<Search/>*/}\r\n            </div>\r\n            <div className=\"footer__third footer__third--right\">\r\n                <h4>Interested in adding to the database?</h4>\r\n                <a className=\"button\" href=\"mailto:lewisct@iupui.edu\">Email Now</a>\r\n                <p>&copy; 2019 {year} The Virgin Forest Project</p>\r\n                <p>Designed by <a className=\"link\"\r\n                                  href=\"https://mleichty.github.io/leichty_portfolio/\"\r\n                                  target=\"_blank\">Maria Leichty</a></p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport Nav from \"./Nav\";\r\nimport BlackBox from \"./BlackBox\";\r\nimport Quote from \"./Quote\";\r\nimport Footer from \"./Footer\";\r\nimport $ from \"jquery\";\r\n\r\nfunction About() {\r\n\r\n    $(window).scroll(function () {\r\n        let scroll = $(window).scrollTop();\r\n        console.log(scroll);\r\n        if (scroll > 500) {\r\n            $('.background__stat').css({\r\n                textShadow: \"2px 2px \" + (2500 / scroll) + \"px var(--orange)\",\r\n                animationName: \"slide\",\r\n                animationDuration: \"1s\",\r\n                opacity: \"1\"\r\n            })\r\n        } else {\r\n            $('.background__stat').css({\r\n                animationName: \"undo\",\r\n                animationDuration: \"1s\",\r\n                opacity: \"0\"\r\n            })\r\n        }\r\n    });\r\n\r\n    //CONTENT\r\n    let bg1 = {\r\n        backgroundImage: \"url('images/Forest1.jpg')\"\r\n    };\r\n\r\n    let about_title = \"Why We Started\";\r\n    let stat = \"Since 1600, 90% of the virgin forests that once covered much of the lower 48 states have been cleared away.\";\r\n    let section1_body1 = \"In 2016, I was awarded a Creative Renewal Grant from the Arts Council of Indianapolis. As a filmmaker, my application purposed filming in the three virgin forests under state control in Indiana. My project involved visiting these forests during each season of the year and each time shooting eight, 8-minute tracking shots, which would basically take a full day to complete.\";\r\n    let section1_body2 = \"My proposal also included the creation of a website (this one) that would host the films and information about the forests I documented. But I also wanted the website to be a platform for other’s artistic work about virgin forests in the United States east of the Mississippi.\";\r\n    let section1_body3 = \"I invite you to submit your work for consideration, whether it be photographs, paintings, films, etc. My hope is that this website can grow into a repository of artistic expression about the few remaining virgin forests.      \";\r\n\r\n    let quote1 = \"I am convinced that most Americans of the new generation have no idea what a decent forest looks like. The only way to tell them is to show them.\";\r\n    let quote1_author = \"Aldo Leopold\";\r\n    let quote1_src = \"The River of the Mother of God\";\r\n\r\n    let section2_title = \"About Me\";\r\n    let section2_body1 = \"Thomas Lewis is a senior lecturer in the School of Informatics and Computing in IUPUI (Indiana University Purdue University – Indianapolis), where he teaches video production and filmmaking. When not doing video-related work, he likes to bike, run and escape to foreign lands. He blogs at untitledevent.wordpress.com and writes about his various bike tours at grannygear.tumblr.com. He is long overdue for another tour.\";\r\n    let section2_img = \"images/thomas-lewis.jpg\";\r\n\r\n    let quote2 = \"What we are doing to the forests of the world is but a mirror reflection of what we are doing to ourselves and to one another.\";\r\n    let quote2_author = \"Chris Maser\";\r\n    let quote2_src = \"Forest Primeval\";\r\n\r\n    let section3_title = \"What is a Virgin Forest?\";\r\n    let section3_body1 = \"During the project, much to my surprise I was often asked, “What is a virgin forest? I have never heard of that.” A virgin forest is a forest that has never been logged. Most of the original forests in Indiana have long since been turned to lumber. The vast majority of the forests you see today (at least in Indiana) are secondary growth, growth after having been logged.\";\r\n    let section3_body2 = \"The number of remaining virgin forests in the United States are pretty limited. While Indiana has a dozen old-growth forests, only four of them are considered virgin. The fourth virgin forest, the one I did not film in, is under federal control in the Hoosier National Forest and permission from the national forest was not forthcoming with substantial payment.\";\r\n\r\n    let section4_title = \"On the Technical Side\";\r\n    let section4_body1 = \"My films were shot in high resolution 4K. Each shot was 8-minutes in duration, but has been sped up 800% into timelapse to last 1 minute. Each film contains shots from each season of the year so you can witness a complete seasonal cycle in the life of a virgin forest.\";\r\n\r\n    return (\r\n        <div>\r\n            <Nav/>\r\n            <div className=\"background__half--about\">\r\n                <h2 className=\"background__stat\">{stat}</h2>\r\n            </div>\r\n            <div className=\"background nav__padding\" style={bg1}>\r\n                <div className=\"background__filter\">\r\n                    <div className=\"background__full\">\r\n                        <div\r\n                            className=\"background__half background__half--content\">\r\n                            <BlackBox title={about_title} h1=\"true\"\r\n                                      body={section1_body1}\r\n                                      body2={section1_body2}\r\n                                      body3={section1_body3}/>\r\n                            <Quote quote={quote1} author={quote1_author}\r\n                                   src={quote1_src}/>\r\n                            <BlackBox title={section2_title}\r\n                                      src={section2_img} body={section2_body1}/>\r\n                            <Quote quote={quote2} author={quote2_author}\r\n                                   src={quote2_src}/>\r\n                            <BlackBox title={section3_title}\r\n                                      body={section3_body1}\r\n                                      body2={section3_body2}/>\r\n                            <Quote quote={quote2} author={quote2_author}\r\n                                   src={quote2_src}/>\r\n                            <BlackBox title={section4_title}\r\n                                      body={section4_body1}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Footer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport $ from \"jquery\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faAngleDoubleLeft} from '@fortawesome/free-solid-svg-icons';\r\nimport {faAngleDoubleRight} from '@fortawesome/free-solid-svg-icons';\r\nimport fire from \"./Fire\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction ScrollSection(props) {\r\n\r\n    const [forests, updateForests] = React.useState([]);\r\n    const [gallery, updateGallery] = React.useState([]);\r\n    const [facts, updateFacts] = React.useState([]);\r\n    const [forestMedia, updateForestMedia] = React.useState([]);\r\n    const [forestId, updateForestId] = React.useState(\"\");\r\n    const [leftHeight, updateLeftHeight] = React.useState(0);\r\n    const [submitted, changeSubmitted] = React.useState(\"\");\r\n\r\n    let db = fire.firestore();\r\n\r\n    React.useEffect(() => {\r\n        if (props.forestId) {\r\n            updateForestId(props.forestId);\r\n        }\r\n\r\n        let newForests = [];\r\n\r\n        function handleStatusChange(status) {\r\n            updateForests(status);\r\n        }\r\n\r\n        const unsubscribe = db.collection(\"forests\").get().then(\r\n            function (snapshot) {\r\n                snapshot.forEach(\r\n                    function (doc) {\r\n                        let item = {\r\n                            name: doc.data().name,\r\n                            mainPic: doc.data().mainPic,\r\n                            id: doc.id\r\n                        };\r\n                        newForests.push(item);\r\n                    });\r\n\r\n                handleStatusChange(newForests);\r\n            });\r\n        return () => unsubscribe;\r\n    }, [submitted]);\r\n\r\n    let forestList = forests.map((forest, idx) => {\r\n        return (\r\n            <Link to={\"/\" + forest.id} onClick={() => {$(window).scrollTop(0);}} key={idx} className=\"database__forest\"\r\n                  style={{backgroundImage: \"url('\" + forest.mainPic + \"')\"}}>\r\n                <h2 className=\"database__name\">{forest.name}</h2>\r\n            </Link>\r\n        )\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        let newGallery = [];\r\n\r\n        function handleStatusChange(status) {\r\n            updateGallery(status);\r\n        }\r\n\r\n        //add if statement here whether to get all media or id media\r\n        const unsubscribe2 = db.collection(\"media\").get().then(\r\n            function (snapshot) {\r\n                // let idx = 1;\r\n                snapshot.forEach(\r\n                    function (doc) {\r\n                        let item = {\r\n                            title: doc.data().image[0],\r\n                            media: doc.data().image[1],\r\n                            id: doc.id\r\n                        };\r\n                        newGallery.push(item);\r\n                        // idx++;\r\n                    });\r\n\r\n                handleStatusChange(newGallery);\r\n            });\r\n        return () => unsubscribe2;\r\n    }, [submitted]);\r\n\r\n    let galleryList = gallery.map((media, idx) => {\r\n        return (\r\n            <div className=\"gallery nav__padding\" key={idx}>\r\n                <div className=\"gallery__picDiv\">\r\n                    <div className=\"gallery__imageDiv\">\r\n                    <img className=\"gallery__pic\" src={media.media} alt=\"\"/>\r\n                    </div>\r\n                    <h3 className=\"gallery__title\">{media.title}</h3>\r\n                </div>\r\n            </div>\r\n        )\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        let newForestMedia = [];\r\n\r\n        function handleStatusChange(status) {\r\n            updateForestMedia(status);\r\n        }\r\n\r\n        const unsubscribe4 = db.collection(\"media\").where(\"id\", \"==\", forestId).get().then(\r\n            function (snapshot) {\r\n                snapshot.forEach(\r\n                    function (doc) {\r\n                        let item = {\r\n                            title: doc.data().image[0],\r\n                            image: doc.data().image[1]\r\n                        };\r\n                        newForestMedia.push(item);\r\n                    });\r\n\r\n                handleStatusChange(newForestMedia);\r\n            });\r\n        // console.log(forestId);\r\n\r\n        return () => unsubscribe4;\r\n    }, [forestId]);\r\n\r\n    let forestMediaList = forestMedia.map((image, idx) => {\r\n        return (\r\n            <div className=\"gallery gallery--forest\" key={idx}>\r\n                <div className=\"gallery__picDiv\">\r\n                    <img className=\"gallery__pic\" src={image.image} alt=\"\"/>\r\n                    <h3 className=\"gallery__title\">{image.title}</h3>\r\n                </div>\r\n            </div>\r\n        )\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        let newFacts = [];\r\n\r\n        function handleStatusChange(status) {\r\n            updateFacts(status);\r\n        }\r\n\r\n        const unsubscribe3 = db.collection(\"history\").where(\"id\", \"==\", forestId).get().then(\r\n            function (snapshot) {\r\n                snapshot.forEach(\r\n                    function (doc) {\r\n                        let item = {\r\n                            year: doc.data().fact[0],\r\n                            fact: doc.data().fact[1]\r\n                        };\r\n                        newFacts.push(item);\r\n                    });\r\n\r\n                handleStatusChange(newFacts);\r\n            });\r\n        // console.log(forestId);\r\n\r\n        return () => unsubscribe3;\r\n    }, [forestId]);\r\n\r\n    let factList = facts.map((fact, idx) => {\r\n        return (\r\n            <div key={idx} className=\"forest__fact\">\r\n                <h2>{fact.year}</h2>\r\n                <p>{fact.fact}</p>\r\n            </div>\r\n        )\r\n    });\r\n\r\n    const left = React.useRef(null);\r\n    const boxLeft = React.useRef(null);\r\n    const boxRight = React.useRef(null);\r\n\r\n    const showBoxes = () => {\r\n        updateLeftHeight($(left.current).height());\r\n\r\n        if ($(window).width() > 980) {\r\n            // console.log(leftHeight);\r\n            $(boxLeft.current).css({\r\n                display: \"block\"\r\n            });\r\n            $(boxRight.current).css({\r\n                display: \"block\"\r\n            });\r\n        }\r\n    };\r\n\r\n    const hideBoxes = () => {\r\n        $(boxLeft.current).css({\r\n            display: \"none\"\r\n        });\r\n        $(boxRight.current).css({\r\n            display: \"none\"\r\n        })\r\n    };\r\n\r\n    const scrollLeft = () => {\r\n        $(left.current).animate({scrollLeft: '-=100'}, 200, 'linear', scrollLeft);\r\n    };\r\n\r\n    const shiftLeft = () => {\r\n        let width = $(left.current).scrollLeft() - $(window).width();\r\n        $(left.current).animate({scrollLeft: width}, 500, 'linear');\r\n    };\r\n\r\n    const scrollRight = () => {\r\n        $(left.current).animate({scrollLeft: '+=100'}, 200, 'linear', scrollRight);\r\n    };\r\n\r\n    const shiftRight = () => {\r\n        let width = $(left.current).scrollLeft() + $(window).width();\r\n        $(left.current).animate({scrollLeft: width}, 500, 'linear');\r\n    };\r\n\r\n    const scrollStop = () => {\r\n        $(left.current).stop();\r\n    };\r\n\r\n    let bottom;\r\n    if (props.bottom === \"database\") {\r\n        let height = $(window).height() / 2;\r\n        bottom = {bottom: height}\r\n    } else if (props.bottom === \"gallery\") {\r\n        let height = $(window).height() / 2;\r\n        // console.log(height);\r\n        bottom = {bottom: height}\r\n    } else if (props.bottom === \"facts\") {\r\n        let height = leftHeight / 2 + $(window).height();\r\n        bottom = {bottom: height};\r\n    }\r\n\r\n    // let databasePic = {\r\n    //     backgroundImage: \"url('images/Forest5.jpg')\"\r\n    // };\r\n    // let forestTitle = \"Wesselman's Woods\";\r\n\r\n    let database;\r\n    let leftMove;\r\n    let rightMove;\r\n    let toggleScroll;\r\n    if (props.database || props.facts) {\r\n        leftMove =\r\n            <div className=\"background__scroll background__scroll--left\"\r\n                 ref={boxLeft} style={bottom}\r\n                 onMouseOver={() => scrollLeft()}\r\n                 onMouseOut={() => scrollStop()}>\r\n                <FontAwesomeIcon icon={faAngleDoubleLeft} size=\"2x\"/></div>;\r\n        rightMove =\r\n            <div className=\"background__scroll background__scroll--right\"\r\n                 ref={boxRight} style={bottom}\r\n                 onMouseOver={() => scrollRight()}\r\n                 onMouseOut={() => scrollStop()}>\r\n                <FontAwesomeIcon icon={faAngleDoubleRight} size=\"2x\"/></div>;\r\n        toggleScroll = {\r\n            overflowX: \"auto\",\r\n            marginBottom: \"-20px\"\r\n        }\r\n    }\r\n\r\n    if (props.database) {\r\n        database = forestList;\r\n    }\r\n\r\n    if (props.facts) {\r\n        database = factList;\r\n    }\r\n\r\n    if (props.gallery) {\r\n        if (props.forestId) {\r\n            database = forestMediaList;\r\n        } else {\r\n            database = galleryList;\r\n        }\r\n        leftMove = <div className=\"background__scroll background__scroll--left\"\r\n                        ref={boxLeft} style={bottom}\r\n                        onClick={() => shiftLeft()}>\r\n            <FontAwesomeIcon icon={faAngleDoubleLeft} size=\"2x\"/></div>;\r\n        rightMove =\r\n            <div className=\"background__scroll background__scroll--right\"\r\n                 ref={boxRight} style={bottom}\r\n                 onClick={() => shiftRight()}>\r\n                <FontAwesomeIcon icon={faAngleDoubleRight} size=\"2x\"/></div>;\r\n        toggleScroll = {\r\n            overflowX: \"hidden\"\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"background__scrollDiv\" style={toggleScroll} ref={left}\r\n             onMouseOver={() => showBoxes()} onMouseOut={() => hideBoxes()}>\r\n            {leftMove}\r\n            {rightMove}\r\n            {database}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ScrollSection;","import React from 'react';\r\nimport Nav from \"./Nav\";\r\nimport BlackBox from \"./BlackBox\";\r\nimport Footer from \"./Footer\";\r\nimport ScrollSection from \"./ScrollSection\";\r\n\r\nfunction Database() {\r\n\r\n    //CONTENT\r\n    let bg1 = {\r\n        backgroundImage: \"url('images/Forest3.jpg')\"\r\n    };\r\n\r\n    let database_title = \"The Virgin Forest Project Database\";\r\n    let section1_body1 = \"This newly launched database contains information and artwork related to virgin forests in the eastern United States. It will hopefully grow into a substantial and diverse collection of creative expression that reflects the vitality of untouched forests and the importance of their presence in the american landscape and in our cultural imagination.\";\r\n    let section1_body2 = \"Old growth forests are a refuge that can provide relief from our stressful, overly technical daily existence. This database will showcase work that helps to promote and interpret virgin forests that somehow avoided the fate of so much of America’s woodlands.\";\r\n    let section1_body3 = \"If you have produced artwork (films, photographs, paintings, drawings) of an American Virgin Forest east of the Mississippi, please consider submitting your work to the database.\";\r\n\r\n    // let search_title = \"Database Search\";\r\n\r\n    return (\r\n        <div>\r\n            <Nav/>\r\n            <div className=\"background nav__padding\" style={bg1}>\r\n                <div className=\"background__filter\">\r\n                    <div className=\"background__full\">\r\n                        <div className=\"background__half background__half--content\">\r\n                            <BlackBox title={database_title} h1=\"true\"\r\n                                      body={section1_body1} body2={section1_body2} body3={section1_body3}/>\r\n                            {/*<BlackBox title={search_title} search=\"true\"/>*/}\r\n                        </div>\r\n                    </div>\r\n                    <ScrollSection database=\"true\" bottom=\"database\"/>\r\n                </div>\r\n            </div>\r\n            <Footer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Database;","import React from 'react';\r\nimport ScrollSection from \"./ScrollSection\";\r\nimport Nav from \"./Nav\";\r\nimport Footer from \"./Footer\";\r\n\r\nfunction Gallery() {\r\n    return(\r\n        <div>\r\n            <Nav/>\r\n            <ScrollSection gallery=\"true\" bottom=\"gallery\"/>\r\n            <Footer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Gallery;","import React from 'react';\r\nimport Nav from \"./Nav\";\r\nimport BlackBox from \"./BlackBox\";\r\nimport Footer from \"./Footer\";\r\n\r\nfunction Resources() {\r\n\r\n    //CONTENT\r\n    let bg1 = {\r\n        backgroundImage: \"url('images/Forest7.jpg')\"\r\n    };\r\n\r\n    let resources_title = \"Related Resources\";\r\n    let section1_body1 = \"Below is a list of resources relevant to old growth forests and forests in general.\";\r\n\r\n    return (\r\n        <div>\r\n            <Nav/>\r\n            <div className=\"background nav__padding\" style={bg1}>\r\n                <div className=\"background__filter\">\r\n                    <div className=\"background__full\">\r\n                        <div className=\"background__half background__half--content\">\r\n                            <BlackBox title={resources_title} h1=\"true\"\r\n                                      body={section1_body1} resources=\"true\"/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Footer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Resources;","import React from 'react';\r\nimport Nav from \"./Nav\";\r\nimport BlackBox from \"./BlackBox\";\r\nimport Footer from \"./Footer\";\r\nimport fire from \"./Fire\";\r\nimport ScrollSection from \"./ScrollSection\";\r\n\r\nfunction Forest(props) {\r\n\r\n    const [values, setValues] = React.useState({\r\n        id: props.match.params.id,\r\n        name: \"\",\r\n        state: \"\",\r\n        description: \"\",\r\n        location: \"\",\r\n        mainPic: \"\",\r\n        size: \"\",\r\n        flora: \"\",\r\n        fauna: \"\",\r\n        threats: \"\",\r\n        habitats: \"\",\r\n        source: \"\",\r\n        videoUrl: \"\"\r\n    });\r\n    const [submitted, changeSubmitted] = React.useState(\"\");\r\n\r\n    let db = fire.firestore();\r\n\r\n    React.useEffect(() => {\r\n        function handleStatusChange(status) {\r\n            setValues(status);\r\n        }\r\n\r\n        const unsubscribe = db.collection(\"forests\").doc(props.match.params.id).get().then(\r\n            function (doc) {\r\n                let forest = {\r\n                    id: doc.id,\r\n                    name: doc.data().name,\r\n                    state: doc.data().state,\r\n                    description: doc.data().description,\r\n                    location: doc.data().location,\r\n                    mainPic: doc.data().mainPic,\r\n                    size: doc.data().size,\r\n                    flora: doc.data().flora,\r\n                    fauna: doc.data().fauna,\r\n                    threats: doc.data().threats,\r\n                    habitats: doc.data().habitats,\r\n                    source: doc.data().source,\r\n                    videoUrl: doc.data().videoUrl\r\n                };\r\n\r\n                handleStatusChange(forest);\r\n            });\r\n        return () => unsubscribe;\r\n    }, [submitted]);\r\n\r\n    let facts;\r\n    facts = <ScrollSection facts=\"true\" bottom=\"facts\" forestId={props.match.params.id}/>\r\n\r\n    let media;\r\n    if (values.videoUrl !== \"\") {\r\n        media = <div className=\"forest__mediaDiv\">\r\n            <iframe src={values.videoUrl} title={values.name}\r\n                    className=\"forest__media\" frameBorder=\"0\"\r\n                    allow=\"autoplay; fullscreen\"\r\n                    allowFullScreen/>\r\n        </div>\r\n    } else {\r\n        media = <ScrollSection gallery=\"true\" bottom=\"gallery\"\r\n                               forestId={values.id}/>\r\n    }\r\n\r\n    //CONTENT\r\n    let bg1 = {\r\n        backgroundImage: \"url('\" + values.mainPic + \"')\"\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Nav/>\r\n            <div className=\"background nav__padding\" style={bg1}>\r\n                <div className=\"background__filter\">\r\n                    <div className=\"background__full\">\r\n                        <div\r\n                            className=\"background__half background__half--content\">\r\n                            <BlackBox title={values.name} h1=\"true\"\r\n                                      body={values.description}\r\n                                      forest={values}/>\r\n                        </div>\r\n                    </div>\r\n                    {facts}\r\n                    {media}\r\n                </div>\r\n            </div>\r\n            <Footer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Forest;","import React from 'react';\r\nimport './App.css';\r\nimport Home from \"./components/Home\";\r\nimport About from \"./components/About\";\r\nimport Database from \"./components/Database\";\r\nimport Gallery from \"./components/Gallery\";\r\nimport Resources from \"./components/Resources\";\r\nimport Forest from \"./components/Forest\";\r\nimport {\r\n    HashRouter as Router,\r\n    Switch,\r\n    Route\r\n} from \"react-router-dom\";\r\nimport $ from \"jquery\";\r\n\r\nfunction App() {\r\n\r\n    $(window).scroll(function () {\r\n        let scroll = $(window).scrollTop();\r\n        // if (scroll > 100) {\r\n        $('.background__filter').css({\r\n            WebkitBackdropFilter: \"blur(\" + (scroll / 30) + \"px)\",\r\n            backdropFilter: \"blur(\" + (scroll / 30) + \"px)\"\r\n        })\r\n        // } else {\r\n        //     $('.aboutPage__filter').css({\r\n        //         backdropFilter: \"none\"\r\n        //     })\r\n        // }\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Router>\r\n                <Switch>\r\n                    <Route path=\"/\" exact component={Home}/>\r\n                    <Route path=\"/home\" component={Home}/>\r\n                    <Route path=\"/about\" component={About}/>\r\n                    <Route path=\"/gallery\" component={Gallery}/>\r\n                    <Route path=\"/database\" component={Database}/>\r\n                    <Route path=\"/resources\" component={Resources}/>\r\n                    <Route path=\"/:id\" component={Forest}/>\r\n                </Switch>\r\n            </Router>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}